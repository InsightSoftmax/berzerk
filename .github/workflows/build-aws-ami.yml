name: Build AWS AMI for Helix.ml

on:
  push:
    branches:
      - sabrinadl--IN-587-pipeline-aws-ami
  workflow_dispatch:
    inputs:
      aws_region:
        description: "Select region"
        type: choice
        options:
          - us-west-2
          - us-east-2
        default: "us-west-2"
      environment_name:
        description: "Select environment to publish AMI for"
        type: choice
        options:
          - "dev01-uw2"
          - "dev01-ue2"
        default: "dev01-uw2"

env:
  PACKER_VERSION: "1.11.2"
  # Defaults for push events
  AWS_REGION: "us-west-2"
  ENVIRONMENT_NAME: "dev01-uw2"
  ANSIBLE_GALAXY_SERVER_ISC_TOKEN: ${{ secrets.JFROG_TOKEN }}

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      ami_region: ${{ steps.prepare_string.outputs.ami_region }}
    steps:
      - name: Prepare environment variables
        id: prepare_string
        run: |
          input=${{ env.ENVIRONMENT_NAME }}
          ami_region="${input:5}"  # assumes the region code starts at character 6
          echo "AMI Region: $ami_region"
          echo "ami_region=$ami_region" >> $GITHUB_OUTPUT

  publish:
    runs-on: ubuntu-latest
    needs: [prepare]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup packer
        uses: hashicorp/setup-packer@v3
        with:
          version: ${{ env.PACKER_VERSION }}

      - name: Build AWS AMI and capture output
        id: build_ami
        run: |
          chmod +x build.sh
          OUTPUT=$(./build.sh aws)
          echo "$OUTPUT"
          # Extract AMI ID from the output (assumes AMI IDs are formatted like "ami-xxxxxxxx")
          AMI_ID=$(echo "$OUTPUT" | grep -oE 'ami-[a-zA-Z0-9]+' | head -n1)
          echo "Built AMI ID: $AMI_ID"
          echo "::set-output name=ami_id::$AMI_ID"

      - name: Use AMI ID (optional)
        run: echo "The newly built AMI ID is ${{ steps.build_ami.outputs.ami_id }}"
